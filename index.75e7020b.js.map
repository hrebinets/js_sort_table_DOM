{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAO,SAAS,aAAa,CAAC,SAIpC,EAAK,gBAAgB,CAAC,QAAS,SAAC,CAAhC,EACE,GAAI,AAAqB,OAArB,EAAE,MAAM,CAAC,OAAO,CAAW,CAI7B,IAAM,EAAQ,AADI,EADJ,EAAK,gBAAgB,CAAC,OAEb,OAAO,CAAC,EAAE,MAAM,EAGjC,EAAO,SAAS,aAAa,CAAC,SAK9B,EAAiB,AAHF,EADJ,EAAK,gBAAgB,CAAC,OAIJ,GAAG,CAAC,SAAC,CAAxC,EACE,IAAM,EAAY,EAAI,QAAQ,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GAChD,EAAe,WACnB,EAAU,OAAO,CAAC,IAAK,IAAI,OAAO,CAAC,IAAK,KAG1C,MAAO,CACL,MAAO,MAAM,GAAgB,EAAY,EACzC,IAAK,CACP,CACF,GAEM,EAAY,EAAe,KAAK,CACpC,SAAC,CADH,EACY,MAAA,AAAsB,UAAtB,OAAO,EAAK,KAAK,A,GAG7B,EAAe,IAAI,CAAC,SAAC,CAAA,CAAG,CAAxB,SACE,AAAI,EACK,EAAE,KAAK,CAAG,EAAE,KAAK,CAEjB,EAAE,KAAK,CAAC,aAAa,CAAC,EAAE,KAAK,CAExC,GAEA,EAAe,OAAO,CAAC,SAAC,CAAxB,EAAiC,OAAA,EAAK,WAAW,CAAC,EAAK,GAAG,C,EAC5D,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar head = document.querySelector(\"thead\");\n// console.log(head);\nhead.addEventListener(\"click\", function(e) {\n    if (e.target.tagName === \"TH\") {\n        // head\n        var cells = head.querySelectorAll(\"th\");\n        var cellsArr = _to_consumable_array(cells);\n        var index = cellsArr.indexOf(e.target);\n        // body find column\n        var body = document.querySelector(\"tbody\");\n        var bodyRows = body.querySelectorAll(\"tr\");\n        var bodyRowsArr = _to_consumable_array(bodyRows);\n        // body sort column\n        var rowsWithValues = bodyRowsArr.map(function(row) {\n            var cellValue = row.children[index].textContent.trim();\n            var numericValue = parseFloat(cellValue.replace(\"$\", \"\").replace(\",\", \"\"));\n            return {\n                value: isNaN(numericValue) ? cellValue : numericValue,\n                row: row\n            };\n        });\n        var isNumeric = rowsWithValues.every(function(item) {\n            return typeof item.value === \"number\";\n        });\n        rowsWithValues.sort(function(a, b) {\n            if (isNumeric) return a.value - b.value;\n            else return a.value.localeCompare(b.value);\n        });\n        rowsWithValues.forEach(function(item) {\n            return body.appendChild(item.row);\n        });\n    }\n});\n\n//# sourceMappingURL=index.75e7020b.js.map\n","'use strict';\n\nconst head = document.querySelector('thead');\n\n// console.log(head);\n\nhead.addEventListener('click', (e) => {\n  if (e.target.tagName === 'TH') {\n    // head\n    const cells = head.querySelectorAll('th');\n    const cellsArr = [...cells];\n    const index = cellsArr.indexOf(e.target);\n\n    // body find column\n    const body = document.querySelector('tbody');\n    const bodyRows = body.querySelectorAll('tr');\n    const bodyRowsArr = [...bodyRows];\n\n    // body sort column\n    const rowsWithValues = bodyRowsArr.map((row) => {\n      const cellValue = row.children[index].textContent.trim();\n      const numericValue = parseFloat(\n        cellValue.replace('$', '').replace(',', ''),\n      );\n\n      return {\n        value: isNaN(numericValue) ? cellValue : numericValue,\n        row: row,\n      };\n    });\n\n    const isNumeric = rowsWithValues.every(\n      (item) => typeof item.value === 'number',\n    );\n\n    rowsWithValues.sort((a, b) => {\n      if (isNumeric) {\n        return a.value - b.value;\n      } else {\n        return a.value.localeCompare(b.value);\n      }\n    });\n\n    rowsWithValues.forEach((item) => body.appendChild(item.row));\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","head","document","querySelector","addEventListener","e","target","tagName","index","cellsArr","querySelectorAll","indexOf","body","rowsWithValues","bodyRowsArr","map","row","cellValue","children","textContent","trim","numericValue","parseFloat","replace","value","isNaN","isNumeric","every","item","sort","a","b","localeCompare","forEach","appendChild"],"version":3,"file":"index.75e7020b.js.map"}